name: Master Workflow
on:
  push:
    branches:
    - master
jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/core-nightly/sdk:3.0.100-preview8
    steps:
      - name: pull
        uses: actions/checkout@master
      - name: restore
        run: dotnet restore
      - name: test
        run: dotnet test --no-restore
  initialize:
    name: Initialize
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/bin/filter@master
        with:
          args: branch master
      - name: pull
        uses: actions/checkout@master
      - name: initialize
        uses: hashicorp/terraform-github-actions/init@v0.3.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_ACTION_WORKING_DIR: ./infrastructure/terraform
      - name: apply
        uses: hashicorp/terraform-github-actions/apply@v0.3.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_ACTION_WORKING_DIR: ./infrastructure/terraform
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build, initialize]
    container:
      image: mcr.microsoft.com/dotnet/core-nightly/sdk:3.0.100-preview8
    steps:
      - uses: actions/checkout@master
      - run: dotnet restore
      - run: dotnet publish --no-restore -c:Release -o:./artifact
      - name: sync
        uses: actions/aws/cli@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: s3 sync ./artifact/Members.Only/dist s3://members.virtualmadden.dev
      - name: cache
        uses: actions/aws/cli@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: s3 cp ./artifact/Members.Only/dist/index.html s3://members.virtualmadden.dev/index.html --cache-control max-age=0